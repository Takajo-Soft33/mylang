Equatable[T: Type] = trait
  # abstract method
  equals(x: T): Prop
  
  # notation
  operator "==" equals
  operator "!=" x -> ! equals x
  
  # theorems
  reflexivity: Prop = true
  symmetricity[x: T]: Prop = this == x => x == this
  transitivity[x, y: T]: Prop = this == x and x == y => this == y
