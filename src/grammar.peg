re_statement <- re_if / re_while / re_case / re_module / re_trait / re_class / re_val / re_var / re_def
re_if <- "if" s? re_mid s? block (s? "elif" s? re_mid s? block)* (s? "else" s? block)
re_while <- "while" s? re_mid
re_case <- "case" s? re_mid block
re_module <- "module" (s? name)? s? block?
re_trait <- "trait" (s? name)? "<" s? re_list)? s? block?
re_class <- "class" (s? name)? (s? "<" s? re_list)? s? block?
re_val <- "val" s? lexpr (s? ":" s? texpr)? (s? "=" s? rexpr)?
re_var <- "var" s? lexpr (s? ":" s? texpr)? (s? "=" s? rexpr)?
re_def <- "def" s? lexpr (s? args)* (s? ":" s? texpr)? (s? "=" s? (rexpr/ block))?
args <- "(" s? (arg (s? "," s? arg)*)? s? ")"
arg <- le_mid (s? "=" s? re_mid)?

# FIXME
re_assign <- lexpr (s? "=" s? rexpr)*

re_mid <- re_logic / 

re_logic <- re_logic_or_s
re_logic_or_s <- re_logic_and_s (s? "or" s? re_logic_and_s)*
re_logic_and_s <- re_logic_not_s (s? "and" s? re_logic_not_s)*
re_logic_not_s <- ("not" s?)* re_logic_or
re_logic_or <- re_logic_and (s? "||" s? re_logic_and)*
re_logic_and <- re_logic_not (s? "&&" s? re_logic_not)*
re_logic_not <- ("!" s?)* re_compare

re_compare <- re_hand (s? ("==" / "!=" / "===" / "!==" / "=~" / "!~" / "<" / "<=" / ">" / ">=" / "<>" / "<=>") s? re_hand)*

re_hand <- re_or
re_or <- re_xor (s? "|" s? re_xor)*
re_xor <- re_and (s? "^" s? re_and)*
re_and <- re_shift (s? "&" s? re_shift)*
re_shift <- re_arith (s? ("<<" / ">>") s? re_arith)*

re_arith <- re_additive
re_additive <- re_multitive (s? ("+" / "-") s? re_multitive)*
re_multitive <- re_power (s? ("*" / "/" / "%")s? re_power)*
re_power <- (re_not s? "**" s?)* re_not

re_not <- ("~" s?)* re_prime

re_prime <- re_string
